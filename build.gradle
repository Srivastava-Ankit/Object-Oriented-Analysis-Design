buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.boxfuse.client:flyway-release:4.0.3'
        classpath group: 'org.postgresql', name: 'postgresql', version: '9.4.1208.jre7'
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

apply plugin:'idea'
apply plugin:'java'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'org.flywaydb.flyway'

ext.springVersion='4.3.12.RELEASE'
ext.hibernateVersion='5.2.11.Final'
ext.hibernateValidatorVersion='4.3.0.Final'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

    compile 'org.springframework.data:spring-data-jpa:1.3.0.RELEASE'
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-oxm:$springVersion"

    // hibernate
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'

    // C3P0
    compile group: 'c3p0', name: 'c3p0', version: '0.9.0.4'

    // postgres
    compile 'postgresql:postgresql:9.1-901-1.jdbc4'

    // jstl
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'

    // commons-beanutils
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'
}

idea {
    module {
        sourceDirs += file('src')
        testSourceDirs += file('test')
    }
}

gretty {
    httpPort = Integer.parseInt(System.getProperty("httpPort", "8080"))
    contextPath = '/'
}

task createDB(type: Exec){
    workingDir 'db'
    commandLine './create.sh'
}

flyway {
    def dbUri = new URI(System.getenv("DATABASE_URL"))

    def username = dbUri.getUserInfo().split(":")[0]
    def passwd = dbUri.getUserInfo().split(":")[1]
    def dbUrl = "jdbc:postgresql://" + dbUri.getHost() + ':' + dbUri.getPort() + dbUri.getPath()

    url = dbUrl
    user = username
    password = passwd
    locations = ['filesystem:db/migrations']
}

project.afterEvaluate {
    [appRun, jettyRun, jettyRunWar, appRunDebug, appRestart]*.doFirst {
        //TODO: write code to set env variable for DATABASE_URL
    }
}

build.dependsOn flywayMigrate